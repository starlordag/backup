{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/aveeshagrawal/Desktop/project-81/screens/WriteStoryScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TextInput } from 'react-native-gesture-handler';\nimport { Header } from 'react-native-elements';\n\nvar WriteStoryScreen = function (_React$Component) {\n  _inherits(WriteStoryScreen, _React$Component);\n\n  var _super = _createSuper(WriteStoryScreen);\n\n  function WriteStoryScreen(props) {\n    var _this;\n\n    _classCallCheck(this, WriteStoryScreen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      title: '',\n      author: '',\n      storyText: ''\n    };\n    return _this;\n  }\n\n  _createClass(WriteStoryScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }\n      }, React.createElement(Header, {\n        backgroundColor: 'pink',\n        centerComponent: {\n          text: 'Story Hub',\n          style: {\n            color: 'black',\n            fontSize: 30\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Story Title\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            title: text\n          });\n        },\n        value: this.state.title,\n        style: styles.title,\n        placeholderTextColor: \"black\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Author\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            author: text\n          });\n        },\n        placeholderTextColor: \"black\",\n        value: this.state.author,\n        style: styles.author,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }), React.createElement(TextInput, {\n        placeholder: \"Write your story\",\n        onChangeText: function onChangeText(text) {\n          _this2.setState({\n            storyText: text\n          });\n        },\n        placeholderTextColor: \"black\",\n        value: this.state.storyText,\n        style: styles.storyText,\n        multiline: \"true\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }\n      }), React.createElement(TouchableOpacity, {\n        style: styles.submitButton,\n        onPress: this.submitStory,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, React.createElement(Text, {\n        style: styles.buttonText,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, \"Submit\")));\n    }\n  }]);\n\n  return WriteStoryScreen;\n}(React.Component);\n\nexport { WriteStoryScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff'\n  },\n  title: {\n    height: 40,\n    borderWidth: 2,\n    marginTop: 40,\n    margin: 10,\n    color: 'black',\n    padding: 6\n  },\n  author: {\n    height: 40,\n    borderWidth: 2,\n    margin: 10,\n    padding: 6\n  },\n  storyText: {\n    height: 250,\n    borderWidth: 2,\n    margin: 10,\n    padding: 6\n  },\n  submitButton: {\n    justifyContent: 'center',\n    alignSelf: 'center',\n    backgroundColor: 'pink',\n    width: 80,\n    height: 40,\n    color: 'black'\n  },\n  buttonText: {\n    textAlign: 'center',\n    color: 'white',\n    fontWeight: 'bold',\n    color: 'black'\n  }\n});","map":{"version":3,"sources":["/Users/aveeshagrawal/Desktop/project-81/screens/WriteStoryScreen.js"],"names":["React","TextInput","Header","WriteStoryScreen","props","state","title","author","storyText","styles","container","text","style","color","fontSize","setState","submitButton","submitStory","buttonText","Component","StyleSheet","create","flex","backgroundColor","height","borderWidth","marginTop","margin","padding","justifyContent","alignSelf","width","textAlign","fontWeight"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { StyleSheet, Text, View, TouchableOpacity } from 'react-native';\r\nimport { TextInput } from 'react-native-gesture-handler';\r\nimport {Header} from 'react-native-elements';\r\n//import db from '../config'\r\n//import firebase from 'firebase'\r\n \r\nexport default class WriteStoryScreen extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            title: '',\r\n            author: '',\r\n            storyText: '',\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <View style={styles.container}>\r\n                <Header \r\n                    backgroundColor = {'pink'}\r\n                    centerComponent = {{\r\n                        text : 'Story Hub',\r\n                        style : { color: 'black', fontSize: 30}\r\n                    }}\r\n                />\r\n                <TextInput \r\n                    placeholder=\"Story Title\"\r\n                    onChangeText= {(text)=>{\r\n                        this.setState({\r\n                            title: text\r\n                        })\r\n                    }}\r\n                    value={this.state.title}\r\n                    style={styles.title}\r\n                    placeholderTextColor='black'/>\r\n                <TextInput\r\n                    placeholder=\"Author\"\r\n                    onChangeText= {(text)=>{\r\n                        this.setState({\r\n                            author: text\r\n                        })\r\n                    }}\r\n                    placeholderTextColor='black'\r\n                    value={this.state.author}\r\n                    style={styles.author} />\r\n                <TextInput \r\n                    placeholder=\"Write your story\"\r\n                    onChangeText= {(text)=>{\r\n                        this.setState({\r\n                            storyText: text\r\n                        })\r\n                    }}\r\n                    placeholderTextColor='black'\r\n                    value={this.state.storyText}\r\n                    style={styles.storyText}\r\n                  multiline=\"true\"\r\n                  />\r\n                \r\n                <TouchableOpacity\r\n                    style={styles.submitButton}\r\n                    onPress={this.submitStory}\r\n                   >\r\n                    <Text style={styles.buttonText}>Submit</Text>\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: '#fff',\r\n  },\r\n  title:{\r\n      height: 40,\r\n      borderWidth: 2,\r\n      marginTop: 40,\r\n      margin: 10,\r\n      color:'black',\r\n      padding: 6,\r\n\r\n  },\r\n  author: {\r\n      height: 40,\r\n      borderWidth: 2,\r\n      margin: 10,\r\n       padding: 6,\r\n  },\r\n  storyText: {\r\n      height: 250,\r\n      borderWidth: 2,\r\n      margin: 10, \r\n      padding: 6,\r\n  },\r\n  submitButton:{\r\n      justifyContent: 'center',\r\n      alignSelf: 'center',\r\n      backgroundColor: 'pink',\r\n      width: 80,\r\n      height: 40,color:'black',\r\n  },\r\n  buttonText: {\r\n      textAlign: 'center',\r\n      color: 'white',\r\n      fontWeight: 'bold',\r\n      color:'black',\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}