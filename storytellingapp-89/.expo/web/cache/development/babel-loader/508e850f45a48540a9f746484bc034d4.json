{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/aveeshagrawal/Desktop/storytellingapp-89/screens/Profile.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Switch from \"react-native-web/dist/exports/Switch\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\nimport firebase from \"firebase\";\nvar customFonts = {\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\n};\n\nvar Profile = function (_Component) {\n  _inherits(Profile, _Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      fontsLoaded: false,\n      isEnabled: false,\n      light_theme: true,\n      profile_image: \"\",\n      name: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"toggleSwitch\",\n    value: function toggleSwitch() {\n      var previous_state = this.state.isEnabled;\n      var theme = !this.state.isEnabled ? \"dark\" : \"light\";\n      var updates = {};\n      updates[\"/users/\" + firebase.auth().currentUser.uid + \"/current_theme\"] = theme;\n      firebase.database().ref().update(updates);\n      this.setState({\n        isEnabled: !previous_state,\n        light_theme: previous_state\n      });\n    }\n  }, {\n    key: \"_loadFontsAsync\",\n    value: function _loadFontsAsync() {\n      return _regeneratorRuntime.async(function _loadFontsAsync$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Font.loadAsync(customFonts));\n\n            case 2:\n              this.setState({\n                fontsLoaded: true\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._loadFontsAsync();\n\n      this.fetchUser();\n    }\n  }, {\n    key: \"fetchUser\",\n    value: function fetchUser() {\n      var theme, name, image;\n      return _regeneratorRuntime.async(function fetchUser$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(firebase.database().ref(\"/users/\" + firebase.auth().currentUser.uid).on(\"value\", function (snapshot) {\n                theme = snapshot.val().current_theme;\n                name = snapshot.val().first_name + \" \" + snapshot.val().last_name;\n                image = snapshot.val().profile_picture;\n              }));\n\n            case 2:\n              this.setState({\n                light_theme: theme === \"light\" ? true : false,\n                isEnabled: theme === \"light\" ? false : true,\n                name: name,\n                profile_image: image\n              });\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!this.state.fontsLoaded) {\n        return React.createElement(AppLoading, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 14\n          }\n        });\n      } else {\n        return React.createElement(View, {\n          style: this.state.light_theme ? styles.containerLight : styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 9\n          }\n        }, React.createElement(SafeAreaView, {\n          style: styles.droidSafeArea,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }\n        }), React.createElement(View, {\n          style: styles.appTitle,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.appIcon,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/logo.png\"),\n          style: styles.iconImage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }\n        })), React.createElement(View, {\n          style: styles.appTitleTextContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: this.state.light_theme ? styles.appTitleTextLight : styles.appTitleText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }\n        }, \"Storytelling App\"))), React.createElement(View, {\n          style: styles.screenContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          style: styles.profileImageContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: {\n            uri: this.state.profile_image\n          },\n          style: styles.profileImage,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }\n        }), React.createElement(Text, {\n          style: this.state.light_theme ? styles.nameTextLight : styles.nameText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }\n        }, this.state.name)), React.createElement(View, {\n          style: styles.themeContainer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: this.state.light_theme ? styles.themeTextLight : styles.themeText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }\n        }, \"Dark Theme\"), React.createElement(Switch, {\n          style: {\n            transform: [{\n              scaleX: 1.3\n            }, {\n              scaleY: 1.3\n            }]\n          },\n          trackColor: {\n            false: \"#767577\",\n            true: this.state.light_theme ? \"#eee\" : \"white\"\n          },\n          thumbColor: this.state.isEnabled ? \"#ee8249\" : \"#f4f3f4\",\n          ios_backgroundColor: \"#3e3e3e\",\n          onValueChange: function onValueChange() {\n            return _this2.toggleSwitch();\n          },\n          value: this.state.isEnabled,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }\n        })), React.createElement(View, {\n          style: {\n            flex: 0.3\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }\n        })), React.createElement(View, {\n          style: {\n            flex: 0.08\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 11\n          }\n        }));\n      }\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nexport { Profile as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#15193c\"\n  },\n  containerLight: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\n  },\n  appTitle: {\n    flex: 0.07,\n    flexDirection: \"row\"\n  },\n  appIcon: {\n    flex: 0.3,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  iconImage: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  appTitleTextContainer: {\n    flex: 0.7,\n    justifyContent: \"center\"\n  },\n  appTitleText: {\n    color: \"white\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  appTitleTextLight: {\n    color: \"black\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  screenContainer: {\n    flex: 0.85\n  },\n  profileImageContainer: {\n    flex: 0.5,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  profileImage: {\n    width: RFValue(140),\n    height: RFValue(140),\n    borderRadius: RFValue(70)\n  },\n  nameText: {\n    color: \"white\",\n    fontSize: RFValue(40),\n    fontFamily: \"Bubblegum-Sans\",\n    marginTop: RFValue(10)\n  },\n  nameTextLight: {\n    color: \"black\",\n    fontSize: RFValue(40),\n    fontFamily: \"Bubblegum-Sans\",\n    marginTop: RFValue(10)\n  },\n  themeContainer: {\n    flex: 0.2,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: RFValue(20)\n  },\n  themeText: {\n    color: \"white\",\n    fontSize: RFValue(30),\n    fontFamily: \"Bubblegum-Sans\",\n    marginRight: RFValue(15)\n  },\n  themeTextLight: {\n    color: \"black\",\n    fontSize: RFValue(30),\n    fontFamily: \"Bubblegum-Sans\",\n    marginRight: RFValue(15)\n  }\n});","map":{"version":3,"sources":["/Users/aveeshagrawal/Desktop/storytellingapp-89/screens/Profile.js"],"names":["React","Component","RFValue","AppLoading","Font","firebase","customFonts","require","Profile","props","state","fontsLoaded","isEnabled","light_theme","profile_image","name","previous_state","theme","updates","auth","currentUser","uid","database","ref","update","setState","loadAsync","_loadFontsAsync","fetchUser","on","snapshot","val","current_theme","first_name","last_name","image","profile_picture","styles","containerLight","container","droidSafeArea","appTitle","appIcon","iconImage","appTitleTextContainer","appTitleTextLight","appTitleText","screenContainer","profileImageContainer","uri","profileImage","nameTextLight","nameText","themeContainer","themeTextLight","themeText","transform","scaleX","scaleY","false","true","toggleSwitch","flex","StyleSheet","create","backgroundColor","marginTop","Platform","OS","StatusBar","currentHeight","flexDirection","justifyContent","alignItems","width","height","resizeMode","color","fontSize","fontFamily","borderRadius","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  SafeAreaView,\n  Platform,\n  StatusBar,\n  Image,\n  Switch\n} from \"react-native\";\nimport { RFValue } from \"react-native-responsive-fontsize\";\nimport AppLoading from \"expo-app-loading\";\nimport * as Font from \"expo-font\";\n\nimport firebase from \"firebase\";\n\nlet customFonts = {\n  \"Bubblegum-Sans\": require(\"../assets/fonts/BubblegumSans-Regular.ttf\")\n};\n\nexport default class Profile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fontsLoaded: false,\n      isEnabled: false,\n      light_theme: true,\n      profile_image: \"\",\n      name: \"\"\n    };\n  }\n\n  toggleSwitch() {\n    const previous_state = this.state.isEnabled;\n    const theme = !this.state.isEnabled ? \"dark\" : \"light\";\n    var updates = {};\n    updates[\n      \"/users/\" + firebase.auth().currentUser.uid + \"/current_theme\"\n    ] = theme;\n    firebase\n      .database()\n      .ref()\n      .update(updates);\n    this.setState({ isEnabled: !previous_state, light_theme: previous_state });\n  }\n\n  async _loadFontsAsync() {\n    await Font.loadAsync(customFonts);\n    this.setState({ fontsLoaded: true });\n  }\n\n  componentDidMount() {\n    this._loadFontsAsync();\n    this.fetchUser();\n  }\n\n  async fetchUser() {\n    let theme, name, image;\n    await firebase\n      .database()\n      .ref(\"/users/\" + firebase.auth().currentUser.uid)\n      .on(\"value\", function (snapshot) {\n        theme = snapshot.val().current_theme;\n        name = `${snapshot.val().first_name} ${snapshot.val().last_name}`;\n        image = snapshot.val().profile_picture;\n      });\n    this.setState({\n      light_theme: theme === \"light\" ? true : false,\n      isEnabled: theme === \"light\" ? false : true,\n      name: name,\n      profile_image: image\n    });\n  }\n\n  render() {\n    if (!this.state.fontsLoaded) {\n      return <AppLoading />;\n    } else {\n      return (\n        <View\n          style={\n            this.state.light_theme ? styles.containerLight : styles.container\n          }\n        >\n          <SafeAreaView style={styles.droidSafeArea} />\n          <View style={styles.appTitle}>\n            <View style={styles.appIcon}>\n              <Image\n                source={require(\"../assets/logo.png\")}\n                style={styles.iconImage}\n              ></Image>\n            </View>\n            <View style={styles.appTitleTextContainer}>\n              <Text\n                style={\n                  this.state.light_theme\n                    ? styles.appTitleTextLight\n                    : styles.appTitleText\n                }\n              >\n                Storytelling App\n              </Text>\n            </View>\n          </View>\n          <View style={styles.screenContainer}>\n            <View style={styles.profileImageContainer}>\n              <Image\n                source={{ uri: this.state.profile_image }}\n                style={styles.profileImage}\n              ></Image>\n              <Text\n                style={\n                  this.state.light_theme\n                    ? styles.nameTextLight\n                    : styles.nameText\n                }\n              >\n                {this.state.name}\n              </Text>\n            </View>\n            <View style={styles.themeContainer}>\n              <Text\n                style={\n                  this.state.light_theme\n                    ? styles.themeTextLight\n                    : styles.themeText\n                }\n              >\n                Dark Theme\n              </Text>\n\n              <Switch\n                style={{ transform: [{ scaleX: 1.3 }, { scaleY: 1.3 }] }}\n                trackColor={{\n                  false: \"#767577\",\n                  true: this.state.light_theme ? \"#eee\" : \"white\"\n                }}\n                thumbColor={this.state.isEnabled ? \"#ee8249\" : \"#f4f3f4\"}\n                ios_backgroundColor=\"#3e3e3e\"\n                onValueChange={() => this.toggleSwitch()}\n                value={this.state.isEnabled}\n              />\n            </View>\n            <View style={{ flex: 0.3 }} />\n          </View>\n          <View style={{ flex: 0.08 }} />\n        </View>\n      );\n    }\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#15193c\"\n  },\n  containerLight: {\n    flex: 1,\n    backgroundColor: \"white\"\n  },\n  droidSafeArea: {\n    marginTop: Platform.OS === \"android\" ? StatusBar.currentHeight : RFValue(35)\n  },\n  appTitle: {\n    flex: 0.07,\n    flexDirection: \"row\"\n  },\n  appIcon: {\n    flex: 0.3,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  iconImage: {\n    width: \"100%\",\n    height: \"100%\",\n    resizeMode: \"contain\"\n  },\n  appTitleTextContainer: {\n    flex: 0.7,\n    justifyContent: \"center\"\n  },\n  appTitleText: {\n    color: \"white\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  appTitleTextLight: {\n    color: \"black\",\n    fontSize: RFValue(28),\n    fontFamily: \"Bubblegum-Sans\"\n  },\n  screenContainer: {\n    flex: 0.85\n  },\n  profileImageContainer: {\n    flex: 0.5,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  profileImage: {\n    width: RFValue(140),\n    height: RFValue(140),\n    borderRadius: RFValue(70)\n  },\n\n  nameText: {\n    color: \"white\",\n    fontSize: RFValue(40),\n    fontFamily: \"Bubblegum-Sans\",\n    marginTop: RFValue(10)\n  },\n  nameTextLight: {\n    color: \"black\",\n    fontSize: RFValue(40),\n    fontFamily: \"Bubblegum-Sans\",\n    marginTop: RFValue(10)\n  },\n  themeContainer: {\n    flex: 0.2,\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    marginTop: RFValue(20)\n  },\n  themeText: {\n    color: \"white\",\n    fontSize: RFValue(30),\n    fontFamily: \"Bubblegum-Sans\",\n    marginRight: RFValue(15)\n  },\n  themeTextLight: {\n    color: \"black\",\n    fontSize: RFValue(30),\n    fontFamily: \"Bubblegum-Sans\",\n    marginRight: RFValue(15)\n  }\n});\n"]},"metadata":{},"sourceType":"module"}