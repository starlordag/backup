{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"/Users/aveeshagrawal/Desktop/Let-sRide-Template-main/screens/CycleTransactionScreen.js\";\nimport React from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport * as Permissions from \"expo-permissions\";\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\nimport * as firebase from \"firebase\";\nimport db from \"../config.js\";\n\nvar TransactionScreen = function (_React$Component) {\n  _inherits(TransactionScreen, _React$Component);\n\n  function TransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, TransactionScreen);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TransactionScreen).call(this));\n\n    _this.getCameraPermissions = function _callee(id) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: id,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data, buttonState;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              buttonState = _this.state.buttonState;\n\n              if (buttonState === \"CycleId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedCycleId: data,\n                  buttonState: \"normal\"\n                });\n              } else if (buttonState === \"StudentId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedStudentId: data,\n                  buttonState: \"normal\"\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      });\n    };\n\n    _this.initiateCycleIssue = function _callee3() {\n      var cycleissue, studentcycles;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                studentId: _this.state.scannedStudentId,\n                cycleId: _this.state.scannedCycleId,\n                date: firebase.firestore.Timestamp.now().toDate(),\n                transactionType: \"Issue\"\n              });\n              cycleissue = db.collection(\"cycle\");\n              cycleissue.where(\"cycleId\", \"==\", _this.state.scannedCycleId).get().then(function (snapshot) {\n                snapshot.forEach(function (doc) {\n                  cycleissue.doc(doc.id).update({\n                    cycleAvailability: false\n                  });\n                });\n              });\n              studentcycles = db.collection(\"students\");\n              studentcycles.where(\"studentId\", \"==\", _this.state.scannedStudentId).get().then(function (snapshot) {\n                snapshot.forEach(function (doc) {\n                  studentcycles.doc(doc.id).update({\n                    numberOfCyclesIssued: firebase.firestore.FieldValue.increment(1)\n                  });\n                });\n              });\n\n              _this.setState({\n                scannedStudentId: \"\",\n                scannedCycleId: \"\"\n              });\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      });\n    };\n\n    _this.initiateCycleReturn = function _callee4() {\n      var cycleissue, studentcycles;\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                studentId: _this.state.scannedStudentId,\n                cycleId: _this.state.scannedCycleId,\n                date: firebase.firestore.Timestamp.now().toDate(),\n                transactionType: \"Return\"\n              });\n              cycleissue = db.collection(\"cycle\");\n              cycleissue.where(\"cycleId\", \"==\", _this.state.scannedCycleId).get().then(function (snapshot) {\n                snapshot.forEach(function (doc) {\n                  cycleissue.doc(doc.id).update({\n                    cycleAvailability: true\n                  });\n                });\n              });\n              studentcycles = db.collection(\"students\");\n              studentcycles.where(\"studentId\", \"==\", _this.state.scannedStudentId).get().then(function (snapshot) {\n                snapshot.forEach(function (doc) {\n                  studentcycles.doc(doc.id).update({\n                    numberOfCyclesIssued: firebase.firestore.FieldValue.increment(-1)\n                  });\n                });\n              });\n\n              _this.setState({\n                scannedStudentId: \"\",\n                scannedCycleId: \"\"\n              });\n\n            case 6:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      });\n    };\n\n    _this.checkCycleEligibility = function _callee5() {\n      var cycleRef, transactionType;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"cycle\").where(\"cycleId\", \"==\", _this.state.scannedCycleId).get());\n\n            case 2:\n              cycleRef = _context5.sent;\n              transactionType = \"\";\n\n              if (cycleRef.docs.length == 0) {\n                transactionType = false;\n              } else {\n                cycleRef.docs.map(function (doc) {\n                  var cycle = doc.data();\n\n                  if (cycle.cycleAvailability) {\n                    transactionType = \"Issue\";\n                  } else {\n                    transactionType = \"Return\";\n                  }\n                });\n              }\n\n              return _context5.abrupt(\"return\", transactionType);\n\n            case 6:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      });\n    };\n\n    _this.checkStudentEligibilityForCycleIssue = function _callee6() {\n      var studentRef, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"students\").where(\"studentId\", \"==\", _this.state.scannedStudentId).get());\n\n            case 2:\n              studentRef = _context6.sent;\n              isStudentEligible = \"\";\n\n              if (studentRef.docs.length == 0) {\n                _this.setState({\n                  scannedStudentId: \"\",\n                  scannedCycleId: \"\"\n                });\n\n                isStudentEligible = false;\n                Alert.alert(\"The student id doesn't exist in the database!\");\n              } else {\n                studentRef.docs.map(function (doc) {\n                  var student = doc.data();\n\n                  if (student.numberOfCyclesIssued < 2) {\n                    isStudentEligible = true;\n                  } else {\n                    isStudentEligible = false;\n                    Alert.alert(\"The student has already issued 2 cycles!\");\n\n                    _this.setState({\n                      scannedStudentId: \"\",\n                      scannedCycleId: \"\"\n                    });\n                  }\n                });\n              }\n\n              return _context6.abrupt(\"return\", isStudentEligible);\n\n            case 6:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      });\n    };\n\n    _this.checkStudentEligibilityForReturn = function _callee7() {\n      var transactionRef, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee7$(_context7) {\n        while (1) {\n          switch (_context7.prev = _context7.next) {\n            case 0:\n              _context7.next = 2;\n              return _regeneratorRuntime.awrap(db.collection(\"transactions\").where(\"cycleId\", \"==\", _this.state.scannedCycleId).limit(1).get());\n\n            case 2:\n              transactionRef = _context7.sent;\n              isStudentEligible = \"\";\n              transactionRef.docs.map(function (doc) {\n                var lastCycleTransaction = doc.data();\n\n                if (lastCycleTransaction.studentId === _this.state.scannedStudentId) {\n                  isStudentEligible = true;\n                } else {\n                  isStudentEligible = false;\n                  Alert.alert(\"The cycle wasn't issued by this student!\");\n\n                  _this.setState({\n                    scannedStudentId: \"\",\n                    scannedCycleId: \"\"\n                  });\n                }\n              });\n              return _context7.abrupt(\"return\", isStudentEligible);\n\n            case 6:\n            case \"end\":\n              return _context7.stop();\n          }\n        }\n      });\n    };\n\n    _this.handleTransaction = function _callee8() {\n      var transactionType, isStudentEligible;\n      return _regeneratorRuntime.async(function _callee8$(_context8) {\n        while (1) {\n          switch (_context8.prev = _context8.next) {\n            case 0:\n              _context8.next = 2;\n              return _regeneratorRuntime.awrap(_this.checkCycleEligibility());\n\n            case 2:\n              transactionType = _context8.sent;\n\n              if (transactionType) {\n                _context8.next = 8;\n                break;\n              }\n\n              Alert.alert(\"The cycle doesn't exist in the database!\");\n\n              _this.setState({\n                scannedStudentId: \"\",\n                scannedCycleId: \"\"\n              });\n\n              _context8.next = 19;\n              break;\n\n            case 8:\n              if (!(transactionType === \"Issue\")) {\n                _context8.next = 15;\n                break;\n              }\n\n              _context8.next = 11;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForCycleIssue());\n\n            case 11:\n              isStudentEligible = _context8.sent;\n\n              if (isStudentEligible) {\n                _this.initiateCycleIssue();\n\n                Alert.alert(\"Cycle issued to the student!\");\n              }\n\n              _context8.next = 19;\n              break;\n\n            case 15:\n              _context8.next = 17;\n              return _regeneratorRuntime.awrap(_this.checkStudentEligibilityForReturn());\n\n            case 17:\n              isStudentEligible = _context8.sent;\n\n              if (isStudentEligible) {\n                _this.initiateCycleReturn();\n              }\n\n            case 19:\n            case \"end\":\n              return _context8.stop();\n          }\n        }\n      });\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedCycleId: \"\",\n      scannedStudentId: \"\",\n      buttonState: \"normal\",\n      transactionMessage: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(TransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277\n          }\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(KeyboardAvoidingView, {\n          behavior: \"padding\",\n          style: styles.container,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 284\n          }\n        }, React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/cycle.jpg\"),\n          style: {\n            width: 200,\n            height: 200\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: \"center\",\n            fontSize: 30\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          }\n        }, \"LET'S RIDE\")), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 292\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Cycle Id\",\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              scannedCycleId: text\n            });\n          },\n          value: this.state.scannedCycleId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 293\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"CycleId\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 309\n          }\n        }, \"Scan\"))), React.createElement(View, {\n          style: styles.inputView,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Student Id\",\n          onChangeText: function onChangeText(text) {\n            _this2.setState({\n              scannedStudentId: text\n            });\n          },\n          value: this.state.scannedStudentId,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 314\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"StudentId\");\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          }\n        }, \"Scan\"))), React.createElement(Text, {\n          style: styles.transactionAlert,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          }\n        }, this.state.transactionMessage), React.createElement(TouchableOpacity, {\n          style: styles.submitButton,\n          onPress: function _callee9() {\n            var transactionMessage;\n            return _regeneratorRuntime.async(function _callee9$(_context9) {\n              while (1) {\n                switch (_context9.prev = _context9.next) {\n                  case 0:\n                    transactionMessage = _this2.handleTransaction();\n\n                  case 1:\n                  case \"end\":\n                    return _context9.stop();\n                }\n              }\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 336\n          }\n        }, React.createElement(Text, {\n          style: styles.submitButtonText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          }\n        }, \"Submit\")));\n      }\n    }\n  }]);\n\n  return TransactionScreen;\n}(React.Component);\n\nexport { TransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"peachpuff\"\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: \"underline\"\n  },\n  scanButton: {\n    backgroundColor: \"#2196F3\",\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 15,\n    textAlign: \"center\",\n    marginTop: 10\n  },\n  inputView: {\n    flexDirection: \"row\",\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: \"#15169c\",\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  },\n  submitButton: {\n    backgroundColor: \"#15aa21\",\n    width: 100,\n    height: 50,\n    borderRadius: 30\n  },\n  submitButtonText: {\n    padding: 10,\n    textAlign: \"center\",\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"white\"\n  },\n  transactionAlert: {\n    margin: 10,\n    color: \"red\"\n  }\n});","map":{"version":3,"sources":["/Users/aveeshagrawal/Desktop/Let-sRide-Template-main/screens/CycleTransactionScreen.js"],"names":["React","Permissions","BarCodeScanner","firebase","db","TransactionScreen","getCameraPermissions","id","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","state","scannedCycleId","scannedStudentId","initiateCycleIssue","collection","add","studentId","cycleId","date","firestore","Timestamp","now","toDate","transactionType","cycleissue","where","get","then","snapshot","forEach","doc","update","cycleAvailability","studentcycles","numberOfCyclesIssued","FieldValue","increment","initiateCycleReturn","checkCycleEligibility","cycleRef","docs","length","map","cycle","checkStudentEligibilityForCycleIssue","studentRef","isStudentEligible","Alert","alert","student","checkStudentEligibilityForReturn","limit","transactionRef","lastCycleTransaction","handleTransaction","transactionMessage","undefined","StyleSheet","absoluteFillObject","styles","container","require","width","height","textAlign","fontSize","inputView","inputBox","text","scanButton","buttonText","transactionAlert","submitButton","submitButtonText","Component","create","flex","justifyContent","alignItems","backgroundColor","displayText","textDecorationLine","padding","margin","marginTop","flexDirection","borderWidth","borderRightWidth","borderLeftWidth","borderRadius","fontWeight","color"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Text,\r\n  View,\r\n  TouchableOpacity,\r\n  TextInput,\r\n  Image,\r\n  StyleSheet,\r\n  KeyboardAvoidingView,\r\n  Alert\r\n} from \"react-native\";\r\nimport * as Permissions from \"expo-permissions\";\r\nimport { BarCodeScanner } from \"expo-barcode-scanner\";\r\nimport * as firebase from \"firebase\";\r\nimport db from \"../config.js\";\r\n\r\nexport default class TransactionScreen extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      hasCameraPermissions: null,\r\n      scanned: false,\r\n      scannedCycleId: \"\",\r\n      scannedStudentId: \"\",\r\n      buttonState: \"normal\",\r\n      transactionMessage: \"\"\r\n    };\r\n  }\r\n\r\n  getCameraPermissions = async id => {\r\n    const { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n\r\n    this.setState({\r\n      hasCameraPermissions: status === \"granted\",\r\n      buttonState: id,\r\n      scanned: false\r\n    });\r\n  };\r\n\r\n  handleBarCodeScanned = async ({ type, data }) => {\r\n    const { buttonState } = this.state;\r\n\r\n    if (buttonState === \"CycleId\") {\r\n      this.setState({\r\n        scanned: true,\r\n        scannedCycleId: data,\r\n        buttonState: \"normal\"\r\n      });\r\n    } else if (buttonState === \"StudentId\") {\r\n      this.setState({\r\n        scanned: true,\r\n        scannedStudentId: data,\r\n        buttonState: \"normal\"\r\n      });\r\n    }\r\n  };\r\n\r\n  initiateCycleIssue = async () => {\r\n   \r\n    // db.collection(\"transactions\").add({\r\n    //   studentId: this.state\r\n    //   cycleId: this.state.scannedCycleId,\r\n    //   date: firebase.firestore,\r\n    //   transactionType: \"Issue\"\r\n    // });\r\n\r\n    // db.collection(\"transactions\").add({\r\n    //   studentId: this.state.scannedStudentId\r\n    //   cycleId: this.state.scannedCycleId\r\n    //   date: firebase.firestore.Timestamp.now().toDate()\r\n    //   transactionType: \"Issue\"\r\n    // });\r\n\r\n     db.collection(\"transactions\").add({\r\n       studentId: this.state.scannedStudentId,\r\n       cycleId: this.state.scannedCycleId,\r\n       date: firebase.firestore.Timestamp.now().toDate(),\r\n       transactionType: \"Issue\"\r\n     });\r\n\r\n    // db.collection(\"transactions\").({\r\n    //   studentId: this.state.scannedStudentId;\r\n    //   cycleId: this.state.scannedCycleId;\r\n    //   date: firebase.firestore.Timestamp.now().toDate();\r\n    //   transactionType: \"Issue\";\r\n    // });\r\n  \r\n   var cycleissue = db.collection(\"cycle\")\r\n   cycleissue.where(\"cycleId\",\"==\", this.state.scannedCycleId).get()\r\n   .then((snapshot)=>{\r\n     snapshot.forEach((doc)=>{\r\n       cycleissue.doc(doc.id).update({\r\n         cycleAvailability:false\r\n       })\r\n     })\r\n   })\r\n\r\n   var studentcycles = db.collection(\"students\")\r\n      studentcycles.where(\"studentId\",\"==\", this.state.scannedStudentId).get()\r\n      .then((snapshot)=>{\r\n        snapshot.forEach((doc)=>{\r\n          studentcycles.doc(doc.id).update({\r\n            numberOfCyclesIssued:firebase.firestore.FieldValue.increment(1)\r\n          })\r\n        })\r\n      })\r\n\r\n    this.setState({\r\n      scannedStudentId: \"\",\r\n      scannedCycleId: \"\"\r\n    });\r\n  };\r\n\r\n  initiateCycleReturn = async () => {\r\n    //add a transaction\r\n    db.collection(\"transactions\").add({\r\n      studentId: this.state.scannedStudentId,\r\n      cycleId: this.state.scannedCycleId,\r\n      date: firebase.firestore.Timestamp.now().toDate(),\r\n      transactionType: \"Return\"\r\n    });\r\n    //change cycle status\r\n   var cycleissue = db.collection(\"cycle\")\r\n   cycleissue.where(\"cycleId\",\"==\", this.state.scannedCycleId).get()\r\n   .then((snapshot)=>{\r\n     snapshot.forEach((doc)=>{\r\n       cycleissue.doc(doc.id).update({\r\n         cycleAvailability:true\r\n       })\r\n     })\r\n   })\r\n\r\n   var studentcycles = db.collection(\"students\")\r\n      studentcycles.where(\"studentId\",\"==\", this.state.scannedStudentId).get()\r\n      .then((snapshot)=>{\r\n        snapshot.forEach((doc)=>{\r\n          studentcycles.doc(doc.id).update({\r\n            numberOfCyclesIssued:firebase.firestore.FieldValue.increment(-1)\r\n          })\r\n        })\r\n      })\r\n\r\n    // this.setState({\r\n    //   scannedStudentId: \"\";\r\n    //   scannedCycleId: \"\"\r\n    // });\r\n\r\n    // this.setState({\r\n    //   scannedStudentId: ,\r\n    //   scannedCycleId: \r\n    // });\r\n\r\n     this.setState({\r\n       scannedStudentId: \"\",\r\n       scannedCycleId: \"\"\r\n     });\r\n\r\n     // this.state({\r\n    //   scannedStudentId: \"\",\r\n    //   scannedCycleId: \"\"\r\n    // });\r\n  };\r\n\r\n  checkCycleEligibility = async () => {\r\n    const cycleRef = await db\r\n      .collection(\"cycle\")\r\n      .where(\"cycleId\", \"==\", this.state.scannedCycleId)\r\n      .get();\r\n    var transactionType = \"\";\r\n    if (cycleRef.docs.length == 0) {\r\n      transactionType = false;\r\n    } else {\r\n      cycleRef.docs.map(doc => {\r\n        var cycle = doc.data();\r\n        if (cycle.cycleAvailability) {\r\n          transactionType = \"Issue\";\r\n        } else {\r\n          transactionType = \"Return\";\r\n        }\r\n      });\r\n    }\r\n\r\n    return transactionType;\r\n  };\r\n\r\n  checkStudentEligibilityForCycleIssue = async () => {\r\n    const studentRef = await db\r\n      .collection(\"students\")\r\n      .where(\"studentId\", \"==\", this.state.scannedStudentId)\r\n      .get();\r\n    var isStudentEligible = \"\";\r\n    if (studentRef.docs.length == 0) {\r\n      this.setState({\r\n        scannedStudentId: \"\",\r\n        scannedCycleId: \"\"\r\n      });\r\n      isStudentEligible = false;\r\n      Alert.alert(\"The student id doesn't exist in the database!\");\r\n    } else {\r\n      studentRef.docs.map(doc => {\r\n        var student = doc.data();\r\n        if (student.numberOfCyclesIssued < 2) {\r\n          isStudentEligible = true;\r\n        } else {\r\n          isStudentEligible = false;\r\n          Alert.alert(\"The student has already issued 2 cycles!\");\r\n          this.setState({\r\n            scannedStudentId: \"\",\r\n            scannedCycleId: \"\"\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    return isStudentEligible;\r\n  };\r\n\r\n  checkStudentEligibilityForReturn = async () => {\r\n    const transactionRef = await db\r\n      .collection(\"transactions\")\r\n      .where(\"cycleId\", \"==\", this.state.scannedCycleId)\r\n      .limit(1)\r\n      .get();\r\n    var isStudentEligible = \"\";\r\n    transactionRef.docs.map(doc => {\r\n      var lastCycleTransaction = doc.data();\r\n      if (lastCycleTransaction.studentId === this.state.scannedStudentId) {\r\n        isStudentEligible = true;\r\n      } else {\r\n        isStudentEligible = false;\r\n        Alert.alert(\"The cycle wasn't issued by this student!\");\r\n        this.setState({\r\n          scannedStudentId: \"\",\r\n          scannedCycleId: \"\"\r\n        });\r\n      }\r\n    });\r\n    return isStudentEligible;\r\n  };\r\n\r\n  handleTransaction = async () => {\r\n    var transactionType = await this.checkCycleEligibility();\r\n\r\n    if (!transactionType) {\r\n      Alert.alert(\"The cycle doesn't exist in the database!\");\r\n      this.setState({\r\n        scannedStudentId: \"\",\r\n        scannedCycleId: \"\"\r\n      });\r\n    } else if (transactionType === \"Issue\") {\r\n      var isStudentEligible = await this.checkStudentEligibilityForCycleIssue();\r\n      if (isStudentEligible) {\r\n        this.initiateCycleIssue();\r\n        Alert.alert(\"Cycle issued to the student!\");\r\n      }\r\n    } else {\r\n      var isStudentEligible = await this.checkStudentEligibilityForReturn();\r\n      if (isStudentEligible) {\r\n        this.initiateCycleReturn();\r\n        \r\n       // Alert(\"Thank you for returning it to the School!\");\r\n       // alert(\"Thank you for returning it to the School!\");\r\n       // Alert.alert(Thank you for returning it to the School!);\r\n       // Alert.alert(\"Thank you for returning it to the School!\");\r\n\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const hasCameraPermissions = this.state.hasCameraPermissions;\r\n    const scanned = this.state.scanned;\r\n    const buttonState = this.state.buttonState;\r\n\r\n    if (buttonState !== \"normal\" && hasCameraPermissions) {\r\n      return (\r\n        <BarCodeScanner\r\n          onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\r\n          style={StyleSheet.absoluteFillObject}\r\n        />\r\n      );\r\n    } else if (buttonState === \"normal\") {\r\n      return (\r\n        <KeyboardAvoidingView behavior=\"padding\" style={styles.container}>\r\n          <View>\r\n            <Image\r\n              source={require(\"../assets/cycle.jpg\")}\r\n              style={{ width: 200, height: 200 }}\r\n            />\r\n            <Text style={{ textAlign: \"center\", fontSize: 30 }}>LET'S RIDE</Text>\r\n          </View>\r\n          <View style={styles.inputView}>\r\n            <TextInput\r\n              style={styles.inputBox}\r\n              placeholder=\"Cycle Id\"\r\n              onChangeText={text => {\r\n                this.setState({\r\n                  scannedCycleId: text\r\n                });\r\n              }}\r\n              value={this.state.scannedCycleId}\r\n            />\r\n            <TouchableOpacity\r\n              style={styles.scanButton}\r\n              onPress={() => {\r\n                this.getCameraPermissions(\"CycleId\");\r\n              }}\r\n            >\r\n              <Text style={styles.buttonText}>Scan</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n\r\n          <View style={styles.inputView}>\r\n            <TextInput\r\n              style={styles.inputBox}\r\n              placeholder=\"Student Id\"\r\n              onChangeText={text => {\r\n                this.setState({\r\n                  scannedStudentId: text\r\n                });\r\n              }}\r\n              value={this.state.scannedStudentId}\r\n            />\r\n            <TouchableOpacity\r\n              style={styles.scanButton}\r\n              onPress={() => {\r\n                this.getCameraPermissions(\"StudentId\");\r\n              }}\r\n            >\r\n              <Text style={styles.buttonText}>Scan</Text>\r\n            </TouchableOpacity>\r\n          </View>\r\n          <Text style={styles.transactionAlert}>\r\n            {this.state.transactionMessage}\r\n          </Text>\r\n          <TouchableOpacity\r\n            style={styles.submitButton}\r\n            onPress={async () => {\r\n              var transactionMessage = this.handleTransaction();\r\n            }}\r\n          >\r\n            <Text style={styles.submitButtonText}>Submit</Text>\r\n          </TouchableOpacity>\r\n        </KeyboardAvoidingView>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor:\"peachpuff\"\r\n  },\r\n  displayText: {\r\n    fontSize: 15,\r\n    textDecorationLine: \"underline\"\r\n  },\r\n  scanButton: {\r\n    backgroundColor: \"#2196F3\",\r\n    padding: 10,\r\n    margin: 10\r\n  },\r\n  buttonText: {\r\n    fontSize: 15,\r\n    textAlign: \"center\",\r\n    marginTop: 10\r\n  },\r\n  inputView: {\r\n    flexDirection: \"row\",\r\n    margin: 20\r\n  },\r\n  inputBox: {\r\n    width: 200,\r\n    height: 40,\r\n    borderWidth: 1.5,\r\n    borderRightWidth: 0,\r\n    fontSize: 20\r\n  },\r\n  scanButton: {\r\n    backgroundColor: \"#15169c\",\r\n    width: 50,\r\n    borderWidth: 1.5,\r\n    borderLeftWidth: 0\r\n  },\r\n  submitButton: {\r\n    backgroundColor: \"#15aa21\",\r\n    width: 100,\r\n    height: 50,\r\n    borderRadius:30\r\n  },\r\n  submitButtonText: {\r\n    padding: 10,\r\n    textAlign: \"center\",\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n    color: \"white\"\r\n  },\r\n  transactionAlert: {\r\n    margin: 10,\r\n    color: \"red\"\r\n  }\r\n});\r\n"]},"metadata":{},"sourceType":"module"}