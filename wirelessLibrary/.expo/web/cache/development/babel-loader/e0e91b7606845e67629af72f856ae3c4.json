{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/aveeshagrawal/Desktop/wirelessLibrary/screens/BookTransactionScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Touchable from \"react-native-web/dist/exports/Touchable\";\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\nvar BookTransactionScreen = function (_React$Component) {\n  _inherits(BookTransactionScreen, _React$Component);\n\n  var _super = _createSuper(BookTransactionScreen);\n\n  function BookTransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, BookTransactionScreen);\n\n    _this = _super.call(this);\n\n    _this.getCameraPermission = function _callee() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.state({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: 'clicked',\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n\n              _this.state({\n                scanned: true,\n                scannedData: data,\n                buttonState: 'normal'\n              });\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedData: '',\n      buttonState: 'normal'\n    };\n    return _this;\n  }\n\n  _createClass(BookTransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState === \"clicked\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undifined : this.handleBarCodeScanned,\n          styles: StyleSheet.absoluteFillObject,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }\n        }, React.createElement(Text, {\n          style: styles.displayText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }\n        }, hasCameraPermissions === true ? this.state.scannedData : \"request camera permission\"), React.createElement(TouchableOpacity, {\n          onPress: this.getCameraPermission,\n          style: styles.scanButton,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }\n        }, React.createElement(Text, {\n          style: styles.ButtonTxt,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 24\n          }\n        }, \"Scan QR Code\")));\n      }\n    }\n  }]);\n\n  return BookTransactionScreen;\n}(React.Component);\n\nexport { BookTransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15\n  },\n  scanButton: {\n    backgroundColor: '#2196f3',\n    padding: 10,\n    margin: 10\n  },\n  ButtonTxt: {\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/Users/aveeshagrawal/Desktop/wirelessLibrary/screens/BookTransactionScreen.js"],"names":["React","Permissions","BarCodeScanner","BookTransactionScreen","getCameraPermission","askAsync","CAMERA","status","state","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","scannedData","undifined","StyleSheet","absoluteFillObject","styles","container","displayText","scanButton","ButtonTxt","Component","create","flex","justifyContent","alignItems","fontSize","backgroundColor","padding","margin"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Text,TouchableOpacity,View,StyleSheet, Touchable} from 'react-native'\nimport * as Permissions from 'expo-permissions'\nimport {BarCodeScanner} from 'expo-barcode-scanner'\n\nexport default class BookTransactionScreen extends React.Component{\n    constructor(){\n        super()\n        this.state={\n            hasCameraPermissions:null,\n            scanned:false,\n            scannedData:'',\n            buttonState:'normal'\n        }\n    }\n\n    getCameraPermission = async() => {\n        const {status} = await Permissions.askAsync(Permissions.CAMERA)\n        this.state({\n            hasCameraPermissions: status === \"granted\",\n            buttonState:'clicked',\n            scanned:false\n        })\n    }\n\n    handleBarCodeScanned = async({type,data}) => {\n        this.state({\n            scanned:true,\n            scannedData:data,\n            buttonState:'normal'\n        })\n    }\n\n\n    render(){\n        const hasCameraPermissions = this.state.hasCameraPermissions\n        const scanned = this.state.scanned\n        const buttonState = this.state.buttonState\n\n        if(buttonState === \"clicked\" && hasCameraPermissions){\n            return(\n                <BarCodeScanner onBarCodeScanned = {scanned ? undifined:this.handleBarCodeScanned}\n                styles = {StyleSheet.absoluteFillObject}\n                />\n            )\n        }\n\n        else if(buttonState === \"normal\"){\n            return(\n                <View style = {styles.container}>\n                    <Text style = {styles.displayText}>\n                        {hasCameraPermissions === true?this.state.scannedData:\"request camera permission\"}\n                    </Text>\n                    <TouchableOpacity\n                    onPress = {this.getCameraPermission}\n                    style = {styles.scanButton}>\n                       <Text style = {styles.ButtonTxt}>Scan QR Code</Text>\n                    </TouchableOpacity>\n                </View>\n            )\n        }\n    }}\n\nconst styles = StyleSheet.create({\n    container:{\n        flex:1,\n        justifyContent:'center',\n        alignItems:'center'\n    },\n    displayText:{\n        fontSize:15\n    },\n    scanButton:{\n        backgroundColor:'#2196f3',\n        padding:10,\n        margin:10\n    },\n    ButtonTxt:{\n        fontSize:20\n    }\n})"]},"metadata":{},"sourceType":"module"}