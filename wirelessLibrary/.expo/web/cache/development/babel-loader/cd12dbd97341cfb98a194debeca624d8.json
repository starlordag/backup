{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/aveeshagrawal/Desktop/wirelessLibrary/screens/BookTransactionScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport ToastAndroid from \"react-native-web/dist/exports/ToastAndroid\";\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport * as firebase from 'firebase';\nimport db from \"../config\";\n\nvar BookTransactionScreen = function (_React$Component) {\n  _inherits(BookTransactionScreen, _React$Component);\n\n  var _super = _createSuper(BookTransactionScreen);\n\n  function BookTransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, BookTransactionScreen);\n\n    _this = _super.call(this);\n\n    _this.getCameraPermissions = function _callee(id) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: id,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data, buttonState;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              buttonState = _this.state.buttonState;\n\n              if (buttonState === \"BookId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedData: data,\n                  buttonState: 'normal'\n                });\n              } else if (buttonState === \"StudentId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedData: data,\n                  buttonState: 'normal'\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookIssue = function _callee3() {\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              db.collection(\"transaction\").add({\n                'studentId': _this.state.scannedStudentId,\n                'bookId': _this.state.scannedBookId,\n                'data': firebase.firestore.Timestamp.now().toDate(),\n                'transactionType': \"Issue\"\n              });\n              db.collection(\"books\").doc(_this.state.scannedBookId).update({\n                'bookAvailability': false\n              });\n              db.collection(\"students\").doc(_this.state.scannedStudentId).update({\n                'numberOfBooksIssued': firebase.firestore.FieldValue.increment(1)\n              });\n\n              _this.setState({\n                scannedStudentId: '',\n                scannedBookId: ''\n              });\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.initiateBookReturn = function _callee4() {\n      return _regeneratorRuntime.async(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              db.collection(\"transactions\").add({\n                'studentId': _this.state.scannedStudentId,\n                'bookId': _this.state.scannedBookId,\n                'data': firebase.firestore.Timestamp.now().toDate(),\n                'transactionType': \"Return\"\n              });\n              db.collection(\"books\").doc(_this.state.scannedBookId).update({\n                'bookAvailability': true\n              });\n              db.collection(\"students\").doc(_this.state.scannedStudentId).update({\n                'numberOfBooksIssued': firebase.firestore.FieldValue.increment(-1)\n              });\n\n              _this.setState({\n                scannedStudentId: '',\n                scannedBookId: ''\n              });\n\n            case 4:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleTransaction = function _callee5() {\n      var transactionMessage;\n      return _regeneratorRuntime.async(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              db.collection(\"books\").dock(_this.state.scannedBookId).get().then(function (doc) {\n                var book = doc.data();\n\n                if (book.bookAvailability) {\n                  _this.initiateBookIssue();\n\n                  transactionMessage = \"Book Issued\";\n                  ToastAndroid.show(transactionMessage);\n                } else {\n                  _this.initiateBookReturn();\n\n                  transactionMessage = \"Book Returned\";\n                }\n              });\n\n              _this.setState({\n                transactionMessage: transactionMessage\n              });\n\n            case 2:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedBookId: '',\n      scannedStudentId: '',\n      buttonState: 'normal',\n      transactionMessage: ''\n    };\n    return _this;\n  }\n\n  _createClass(BookTransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 11\n          }\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(KeyboardAvoidingView, {\n          style: styles.container,\n          behavior: \"padding\",\n          enabled: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/booklogo.jpeg\"),\n          style: {\n            width: 200,\n            height: 200\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 30\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }\n        }, \"Wily\")), React.createElement(View, {\n          style: styles.inputView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Book Id\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              scannedBookId: text\n            });\n          },\n          value: this.state.scannedBookId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"BookId\");\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }\n        }, \"Scan\"))), React.createElement(View, {\n          style: styles.inputView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 11\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Student Id\",\n          onChangeText: function onChangeText(text) {\n            return _this2.setState({\n              scannedStudentId: text\n            });\n          },\n          value: this.state.scannedStudentId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"StudentId\");\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }\n        }, \"Scan\"))), React.createElement(TouchableOpacity, {\n          style: styles.submiteButton,\n          onPress: function _callee6() {\n            return _regeneratorRuntime.async(function _callee6$(_context6) {\n              while (1) {\n                switch (_context6.prev = _context6.next) {\n                  case 0:\n                    _this2.handleTransaction();\n\n                  case 1:\n                  case \"end\":\n                    return _context6.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }\n        }, React.createElement(Text, {\n          styles: styles.submiteButtonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }\n        }, \"Submit\")));\n      }\n    }\n  }]);\n\n  return BookTransactionScreen;\n}(React.Component);\n\nexport { BookTransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  scanButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 20,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  inputView: {\n    flexDirection: 'row',\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: '#66BB6A',\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  },\n  submiteButton: {\n    backgroundColor: '#fbc02d',\n    width: 100,\n    height: 50\n  },\n  submiteButtonText: {\n    padding: 10,\n    textAlign: 'center',\n    fontSize: 20,\n    fontWeight: 'bold',\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["/Users/aveeshagrawal/Desktop/wirelessLibrary/screens/BookTransactionScreen.js"],"names":["React","Permissions","BarCodeScanner","firebase","db","BookTransactionScreen","getCameraPermissions","id","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","state","scannedData","initiateBookIssue","collection","add","scannedStudentId","scannedBookId","firestore","Timestamp","now","toDate","doc","update","FieldValue","increment","initiateBookReturn","handleTransaction","dock","get","then","book","bookAvailability","transactionMessage","ToastAndroid","show","undefined","StyleSheet","absoluteFillObject","styles","container","require","width","height","textAlign","fontSize","inputView","inputBox","text","scanButton","buttonText","submiteButton","submiteButtonText","Component","create","flex","justifyContent","alignItems","displayText","textDecorationLine","backgroundColor","padding","margin","marginTop","flexDirection","borderWidth","borderRightWidth","borderLeftWidth","fontWeight","color"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TouchableOpacity, StyleSheet, TextInput, Image, KeyboardAvoidingView, ToastAndroid} from 'react-native';\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\nimport * as firebase from 'firebase'\nimport db from '../config'\n\nexport default class BookTransactionScreen extends React.Component {\n    constructor(){\n      super();\n      this.state = {\n        hasCameraPermissions: null,\n        scanned: false,\n        scannedBookId:'',\n        scannedStudentId:'',\n        buttonState: 'normal',\n        transactionMessage:''\n      }\n    }\n\n    getCameraPermissions = async (id) =>{\n      const {status} = await Permissions.askAsync(Permissions.CAMERA);\n      \n      this.setState({\n        /*status === \"granted\" is true when user has granted permission\n          status === \"granted\" is false when user has not granted the permission\n        */\n        hasCameraPermissions: status === \"granted\",\n        buttonState: id,\n        scanned: false\n      });\n    }\n\n    handleBarCodeScanned = async({type, data})=>{\n      const {buttonState} = this.state\n      if(buttonState === \"BookId\"){\n      this.setState({\n        scanned: true,\n        scannedData: data,\n        buttonState: 'normal'\n      });\n    }\n    else if(buttonState === \"StudentId\"){\n      this.setState({\n        scanned: true,\n        scannedData: data,\n        buttonState: 'normal'\n      });\n    }\n  }\n\n  initiateBookIssue = async() => {\n    db.collection(\"transaction\").add({\n      'studentId' : this.state.scannedStudentId, \n      'bookId' : this.state.scannedBookId, \n      'data' : firebase.firestore.Timestamp.now().toDate(), \n      'transactionType' : \"Issue\" })\n      db.collection(\"books\").doc(this.state.scannedBookId).update({ \n        'bookAvailability' : false }) \n      db.collection(\"students\").doc(this.state.scannedStudentId).update({ \n        'numberOfBooksIssued' : firebase.firestore.FieldValue.increment(1) }) \n      this.setState({ \n        scannedStudentId : '', \n        scannedBookId: '' }) }\n\n  initiateBookReturn = async() => {\n    db.collection(\"transactions\").add({\n      'studentId' : this.state.scannedStudentId, \n      'bookId' : this.state.scannedBookId, \n      'data' : firebase.firestore.Timestamp.now().toDate(), \n      'transactionType' : \"Return\" })\n      db.collection(\"books\").doc(this.state.scannedBookId).update({ \n        'bookAvailability' : true }) \n      db.collection(\"students\").doc(this.state.scannedStudentId).update({ \n        'numberOfBooksIssued' : firebase.firestore.FieldValue.increment(-1) }) \n      this.setState({ \n        scannedStudentId : '', \n        scannedBookId: '' }) }\n\n  handleTransaction = async() => {\n    var transactionMessage\n    db.collection(\"books\").dock(this.state.scannedBookId).get()\n    .then((doc)=>{\n      var book = doc.data()\n      if(book.bookAvailability){\n        this.initiateBookIssue()\n        transactionMessage = \"Book Issued\"\n        ToastAndroid.show(transactionMessage,)\n      }\n      else{\n        this.initiateBookReturn()\n        transactionMessage = \"Book Returned\"\n      }\n    })\n    this.setState({\n      transactionMessage:transactionMessage\n    })\n  }\n    render() {\n      const hasCameraPermissions = this.state.hasCameraPermissions;\n      const scanned = this.state.scanned;\n      const buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions){\n        return(\n          <BarCodeScanner\n            onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\n            style={StyleSheet.absoluteFillObject}\n          />\n        );\n      }\n\n      else if (buttonState === \"normal\"){\n        return(\n          <KeyboardAvoidingView style = {styles.container} behavior = \"padding\" enabled>\n            <View>\n              <Image source = {require(\"../assets/booklogo.jpeg\")} style = {{width:200,height:200}}/>\n              <Text style = {{textAlign:'center',fontSize:30}}>Wily</Text>\n            </View>\n          <View style={styles.inputView}>\n            <TextInput style = {styles.inputBox} placeholder = \"Book Id\"\n            onChangeText = {text => this.setState({scannedBookId:text})}\n            value = {this.state.scannedBookId}/>\n            <TouchableOpacity style = {styles.scanButton}\n              onPress = {() => {\n                this.getCameraPermissions(\"BookId\")\n              }}>\n              <Text style = {styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.inputView}>\n            <TextInput style = {styles.inputBox} placeholder = \"Student Id\"\n            onChangeText = {text => this.setState({scannedStudentId:text})}\n            value = {this.state.scannedStudentId}/>\n            <TouchableOpacity style = {styles.scanButton}\n            onPress = {() => {\n              this.getCameraPermissions(\"StudentId\")}}>\n              <Text style = {styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n          </View>\n          <TouchableOpacity style = {styles.submiteButton} onPress = {async() => {this.handleTransaction()}}>\n            <Text styles = {styles.submiteButtonText}>Submit</Text>\n          </TouchableOpacity>\n        </KeyboardAvoidingView>\n        );\n      }\n    }\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    displayText:{\n      fontSize: 15,\n      textDecorationLine: 'underline'\n    },\n    scanButton:{\n      backgroundColor: '#2196F3',\n      padding: 10,\n      margin: 10\n    },\n    buttonText:{\n      fontSize: 20,\n      textAlign:'center',\n      marginTop:10\n    },\n    inputView:{\n      flexDirection:'row',\n      margin:20\n    },\n    inputBox:{\n      width:200,\n      height:40,\n      borderWidth:1.5,\n      borderRightWidth:0,\n      fontSize:20,\n    },\n    scanButton:{\n      backgroundColor:'#66BB6A',\n      width:50,\n      borderWidth:1.5,\n      borderLeftWidth:0\n    },\n    submiteButton:{\n      backgroundColor:'#fbc02d',\n      width:100,\n      height:50\n    },\n    submiteButtonText:{\n      padding:10,\n      textAlign:'center',\n      fontSize:20,\n      fontWeight:'bold',\n      color:'white'\n    }\n  });"]},"metadata":{},"sourceType":"module"}