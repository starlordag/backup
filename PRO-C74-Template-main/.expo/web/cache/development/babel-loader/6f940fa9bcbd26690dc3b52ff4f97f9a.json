{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/aveeshagrawal/Desktop/PRO-C74-Template-main/screens/ReadStoryScreen.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { SearchBar, Header } from 'react-native-elements';\nimport db from \"../config\";\n\nvar ReadStoryScreen = function (_React$Component) {\n  _inherits(ReadStoryScreen, _React$Component);\n\n  var _super = _createSuper(ReadStoryScreen);\n\n  function ReadStoryScreen() {\n    var _this;\n\n    _classCallCheck(this, ReadStoryScreen);\n\n    _this = _super.call(this);\n\n    _this.updateSearch = function (search) {\n      _this.setState({\n        search: search\n      });\n    };\n\n    _this.retrieveStories = function () {\n      try {\n        var allStories = [];\n        var stories = db.collection(\"stories\").get().then(function (querySnapshot) {\n          querySnapshot.forEach(function (doc) {\n            allStories.push(doc.data());\n            console.log('this are the stories', allStories);\n          });\n\n          _this.setState({\n            allStories: allStories\n          });\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    _this.state = {\n      allStories: [],\n      dataSource: [],\n      search: ''\n    };\n    return _this;\n  }\n\n  _createClass(ReadStoryScreen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.retrieveStories();\n    }\n  }, {\n    key: \"SearchFilterFunction\",\n    value: function SearchFilterFunction(text) {\n      var newData = this.state.allStories.filter(function (item) {\n        var itemData = item.title ? item.title.toUpperCase() : ''.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      this.setState({\n        dataSource: newData,\n        search: text\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(View, {\n        style: styles.container,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, React.createElement(Header, {\n        backgroundColor: 'pink',\n        centerComponent: {\n          text: 'Bed Time Stories',\n          style: {\n            color: 'white',\n            fontSize: 20\n          }\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 12\n        }\n      }), React.createElement(View, {\n        styles: {\n          height: 20,\n          width: '100%'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }\n      }, React.createElement(SearchBar, {\n        placeholder: \"Type Here...\",\n        onChangeText: function onChangeText(text) {\n          return _this2.SearchFilterFunction(text);\n        },\n        value: this.state.search,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }\n      })), React.createElement(FlatList, {\n        data: this.state.search === \"\" ? this.state.allStories : this.state.dataSource,\n        renderItem: function renderItem(item) {\n          return React.createElement(View, {\n            style: styles.itemContainer,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 19\n            }\n          }, React.createElement(Text, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 21\n            }\n          }, \"  Title: \", item.title), React.createElement(Text, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }\n          }, \"  Author : \", item.author));\n        },\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return ReadStoryScreen;\n}(React.Component);\n\nexport { ReadStoryScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff'\n  },\n  item: {\n    backgroundColor: 'pink',\n    padding: 10,\n    marginVertical: 8,\n    marginHorizontal: 16\n  },\n  title: {\n    fontSize: 32\n  },\n  itemContainer: {\n    height: 80,\n    width: '100%',\n    borderWidth: 2,\n    borderColor: 'pink',\n    justifyContent: 'center',\n    alignSelf: 'center'\n  }\n});","map":{"version":3,"sources":["/Users/aveeshagrawal/Desktop/PRO-C74-Template-main/screens/ReadStoryScreen.js"],"names":["React","SearchBar","Header","db","ReadStoryScreen","updateSearch","search","setState","retrieveStories","allStories","stories","collection","get","then","querySnapshot","forEach","doc","push","data","console","log","error","state","dataSource","text","newData","filter","item","itemData","title","toUpperCase","textData","indexOf","styles","container","style","color","fontSize","height","width","SearchFilterFunction","itemContainer","author","index","toString","Component","StyleSheet","create","backgroundColor","padding","marginVertical","marginHorizontal","borderWidth","borderColor","justifyContent","alignSelf"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,SAAQC,SAAR,EAAkBC,MAAlB,QAA+B,uBAA/B;AACA,OAAOC,EAAP;;IAGqBC,e;;;;;AACnB,6BAAa;AAAA;;AAAA;;AACX;;AADW,UAYbC,YAZa,GAYE,UAAAC,MAAM,EAAI;AACvB,YAAKC,QAAL,CAAc;AAAED,QAAAA,MAAM,EAANA;AAAF,OAAd;AACD,KAdY;;AAAA,UAiBbE,eAjBa,GAiBG,YAAI;AAClB,UAAI;AACF,YAAIC,UAAU,GAAE,EAAhB;AACA,YAAIC,OAAO,GAAGP,EAAE,CAACQ,UAAH,CAAc,SAAd,EACXC,GADW,GACLC,IADK,CACA,UAACC,aAAD,EAAkB;AAC5BA,UAAAA,aAAa,CAACC,OAAd,CAAsB,UAACC,GAAD,EAAQ;AAG1BP,YAAAA,UAAU,CAACQ,IAAX,CAAgBD,GAAG,CAACE,IAAJ,EAAhB;AACAC,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAmCX,UAAnC;AACH,WALD;;AAMA,gBAAKF,QAAL,CAAc;AAACE,YAAAA,UAAU,EAAVA;AAAD,WAAd;AACD,SATW,CAAd;AAUD,OAZD,CAaA,OAAOY,KAAP,EAAc;AACZF,QAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACD;AACF,KAlCY;;AAEX,UAAKC,KAAL,GAAY;AACVb,MAAAA,UAAU,EAAC,EADD;AAEVc,MAAAA,UAAU,EAAC,EAFD;AAGVjB,MAAAA,MAAM,EAAG;AAHC,KAAZ;AAFW;AAOZ;;;;WACD,6BAAmB;AACjB,WAAKE,eAAL;AACD;;;WA2BD,8BAAqBgB,IAArB,EAA2B;AAEzB,UAAMC,OAAO,GAAG,KAAKH,KAAL,CAAWb,UAAX,CAAsBiB,MAAtB,CAA6B,UAACC,IAAD,EAAS;AAEpD,YAAMC,QAAQ,GAAGD,IAAI,CAACE,KAAL,GAAaF,IAAI,CAACE,KAAL,CAAWC,WAAX,EAAb,GAAwC,GAAGA,WAAH,EAAzD;AACA,YAAMC,QAAQ,GAAGP,IAAI,CAACM,WAAL,EAAjB;AAMA,eAAOF,QAAQ,CAACI,OAAT,CAAiBD,QAAjB,IAA6B,CAAC,CAArC;AACD,OAVe,CAAhB;AAWA,WAAKxB,QAAL,CAAc;AACZgB,QAAAA,UAAU,EAAEE,OADA;AAEZnB,QAAAA,MAAM,EAAEkB;AAFI,OAAd;AAID;;;WAEC,kBAAQ;AAAA;;AACN,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAGS,MAAM,CAACC,SAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,oBAAC,MAAD;AACK,QAAA,eAAe,EAAI,MADxB;AAEK,QAAA,eAAe,EAAI;AACfV,UAAAA,IAAI,EAAG,kBADQ;AAEfW,UAAAA,KAAK,EAAG;AAAEC,YAAAA,KAAK,EAAE,OAAT;AAAkBC,YAAAA,QAAQ,EAAE;AAA5B;AAFO,SAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,EAQE,oBAAC,IAAD;AAAM,QAAA,MAAM,EAAG;AAACC,UAAAA,MAAM,EAAC,EAAR;AAAWC,UAAAA,KAAK,EAAC;AAAjB,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,SAAD;AACA,QAAA,WAAW,EAAC,cADZ;AAGA,QAAA,YAAY,EAAE,sBAAAf,IAAI;AAAA,iBAAI,MAAI,CAACgB,oBAAL,CAA0BhB,IAA1B,CAAJ;AAAA,SAHlB;AAQA,QAAA,KAAK,EAAE,KAAKF,KAAL,CAAWhB,MARlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CARF,EAqBE,oBAAC,QAAD;AACM,QAAA,IAAI,EAAE,KAAKgB,KAAL,CAAWhB,MAAX,KAAsB,EAAtB,GAA4B,KAAKgB,KAAL,CAAWb,UAAvC,GAAmD,KAAKa,KAAL,CAAWC,UAD1E;AAGM,QAAA,UAAU,EAAE,oBAAEI,IAAF;AAAA,iBAGV,oBAAC,IAAD;AAAM,YAAA,KAAK,EAAEM,MAAM,CAACQ,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAgBd,IAAI,CAACE,KAArB,CADF,EAEE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAkBF,IAAI,CAACe,MAAvB,CAFF,CAHU;AAAA,SAHlB;AAWM,QAAA,YAAY,EAAE,sBAACf,IAAD,EAAOgB,KAAP;AAAA,iBAAiBA,KAAK,CAACC,QAAN,EAAjB;AAAA,SAXpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QArBF,CADF;AAwCD;;;;EAlGwC5C,KAAK,CAAC6C,S;;SAA9BzC,e;AAsGrB,IAAM6B,MAAM,GAAGa,UAAU,CAACC,MAAX,CAAkB;AAC/Bb,EAAAA,SAAS,EAAE;AACTc,IAAAA,eAAe,EAAE;AADR,GADoB;AAI/BrB,EAAAA,IAAI,EAAE;AACJqB,IAAAA,eAAe,EAAE,MADb;AAEJC,IAAAA,OAAO,EAAC,EAFJ;AAGJC,IAAAA,cAAc,EAAE,CAHZ;AAIJC,IAAAA,gBAAgB,EAAE;AAJd,GAJyB;AAU/BtB,EAAAA,KAAK,EAAE;AACLQ,IAAAA,QAAQ,EAAE;AADL,GAVwB;AAa/BI,EAAAA,aAAa,EAAE;AACbH,IAAAA,MAAM,EAAE,EADK;AAEbC,IAAAA,KAAK,EAAC,MAFO;AAGba,IAAAA,WAAW,EAAE,CAHA;AAIbC,IAAAA,WAAW,EAAE,MAJA;AAKbC,IAAAA,cAAc,EAAC,QALF;AAMbC,IAAAA,SAAS,EAAE;AANE;AAbgB,CAAlB,CAAf","sourcesContent":["import React from 'react';\nimport { StyleSheet, Text, View ,FlatList,ScrollView} from 'react-native';\nimport {SearchBar,Header} from 'react-native-elements';\nimport db from '../config'\n\n\nexport default class ReadStoryScreen extends React.Component {\n  constructor(){\n    super();\n    this.state ={\n      allStories:[],\n      dataSource:[],\n      search : ''\n    }\n  }\n  componentDidMount(){\n    this.retrieveStories()\n  }\n\n  updateSearch = search => {\n    this.setState({ search });\n  };\n\n\n  retrieveStories=()=>{\n    try {\n      var allStories= []\n      var stories = db.collection(\"stories\")\n        .get().then((querySnapshot)=> {\n          querySnapshot.forEach((doc)=> {\n              // doc.data() is never undefined for query doc snapshots\n              \n              allStories.push(doc.data())\n              console.log('this are the stories',allStories)\n          })\n          this.setState({allStories})\n        })\n    }\n    catch (error) {\n      console.log(error);\n    }\n  };\n\n\n  SearchFilterFunction(text) {\n    //passing the inserted text in textinput\n    const newData = this.state.allStories.filter((item)=> {\n      //applying filter for the inserted text in search bar\n      const itemData = item.title ? item.title.toUpperCase() : ''.toUpperCase();\n      const textData = text.toUpperCase();\n      // const textData = text.toUppercase();\n      //const textData = text.toupperCase();\n     // const textData = text.upperCase();\n\n\n      return itemData.indexOf(textData) > -1;\n    });\n    this.setState({\n      dataSource: newData,\n      search: text,\n    });\n  }\n\n    render(){\n      return(\n        <View style ={styles.container}>\n           <Header \n                backgroundColor = {'pink'}\n                centerComponent = {{\n                    text : 'Bed Time Stories',\n                    style : { color: 'white', fontSize: 20}\n                }}\n            />\n          <View styles ={{height:20,width:'100%'}}>\n              <SearchBar\n              placeholder=\"Type Here...\"\n             \n              onChangeText={text => this.SearchFilterFunction(text)}\n             // onChangeText={() => this.SearchFilterFunction(text)}\n             // onChangeText={({text}) => this.SearchFilterFunction(text)}\n             // onChangeText={text => this.SearchFilterFunction(text)}\n\n              value={this.state.search}\n            />\n          </View>\n          \n          <FlatList\n                data={this.state.search === \"\" ?  this.state.allStories: this.state.dataSource}\n                //renderItem={({ item }) => (\n                renderItem={( item ) => (\n                //renderItem={({ item }) => {\n                // renderItem=>{({}){\n                  <View style={styles.itemContainer}>\n                    <Text>  Title: {item.title}</Text>\n                    <Text>  Author : {item.author}</Text>\n                  </View>\n                )}\n                keyExtractor={(item, index) => index.toString()}\n                /> \n          \n          \n          \n        </View>  \n      );      \n    }\n}\n\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n  },\n  item: {\n    backgroundColor: 'pink',\n    padding:10,\n    marginVertical: 8,\n    marginHorizontal: 16,\n  },\n  title: {\n    fontSize: 32,\n  },\n  itemContainer: {\n    height: 80,\n    width:'100%',\n    borderWidth: 2,\n    borderColor: 'pink',\n    justifyContent:'center',\n    alignSelf: 'center',\n  }\n});"]},"metadata":{},"sourceType":"module"}