{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/aveeshagrawal/Desktop/wirelessLibrary/screens/BookTransactionScreen.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\nvar BookTransactionScreen = function (_React$Component) {\n  _inherits(BookTransactionScreen, _React$Component);\n\n  var _super = _createSuper(BookTransactionScreen);\n\n  function BookTransactionScreen() {\n    var _this;\n\n    _classCallCheck(this, BookTransactionScreen);\n\n    _this = _super.call(this);\n\n    _this.getCameraPermissions = function _callee(id) {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context.sent;\n              status = _await$Permissions$as.status;\n\n              _this.setState({\n                hasCameraPermissions: status === \"granted\",\n                buttonState: id,\n                scanned: false\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleBarCodeScanned = function _callee2(_ref) {\n      var type, data, buttonState;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              type = _ref.type, data = _ref.data;\n              buttonState = _this.state.buttonState;\n\n              if (buttonState === \"BookId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedData: data,\n                  buttonState: 'normal'\n                });\n              } else if (buttonState === \"StudentId\") {\n                _this.setState({\n                  scanned: true,\n                  scannedData: data,\n                  buttonState: 'normal'\n                });\n              }\n\n            case 3:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.state = {\n      hasCameraPermissions: null,\n      scanned: false,\n      scannedBookId: '',\n      scannedStudentId: '',\n      buttonState: 'normal'\n    };\n    return _this;\n  }\n\n  _createClass(BookTransactionScreen, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var hasCameraPermissions = this.state.hasCameraPermissions;\n      var scanned = this.state.scanned;\n      var buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions) {\n        return React.createElement(BarCodeScanner, {\n          onBarCodeScanned: scanned ? undefined : this.handleBarCodeScanned,\n          style: StyleSheet.absoluteFillObject,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 11\n          }\n        });\n      } else if (buttonState === \"normal\") {\n        return React.createElement(View, {\n          style: styles.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 11\n          }\n        }, React.createElement(View, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/booklogo.jpg\"),\n          style: {\n            width: 200,\n            height: 200\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }\n        }), React.createElement(Text, {\n          style: {\n            textAlign: 'center',\n            fontSize: 30\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }\n        }, \"Wily\")), React.createElement(View, {\n          style: styles.inputView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 11\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Book Id\",\n          value: this.state.scannedBookId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"BookId\");\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 15\n          }\n        }, \"Scan\"))), React.createElement(View, {\n          style: styles.inputView,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }\n        }, React.createElement(TextInput, {\n          style: styles.inputBox,\n          placeholder: \"Student Id\",\n          value: this.state.scannedStudentId,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }\n        }), React.createElement(TouchableOpacity, {\n          style: styles.scanButton,\n          onPress: function onPress() {\n            _this2.getCameraPermissions(\"StudentId\");\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }\n        }, React.createElement(Text, {\n          style: styles.buttonText,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }\n        }, \"Scan\"))));\n      }\n    }\n  }]);\n\n  return BookTransactionScreen;\n}(React.Component);\n\nexport { BookTransactionScreen as default };\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  displayText: {\n    fontSize: 15,\n    textDecorationLine: 'underline'\n  },\n  scanButton: {\n    backgroundColor: '#2196F3',\n    padding: 10,\n    margin: 10\n  },\n  buttonText: {\n    fontSize: 20,\n    textAlign: 'center',\n    marginTop: 10\n  },\n  inputView: {\n    flexDirection: 'row',\n    margin: 20\n  },\n  inputBox: {\n    width: 200,\n    height: 40,\n    borderWidth: 1.5,\n    borderRightWidth: 0,\n    fontSize: 20\n  },\n  scanButton: {\n    backgroundColor: '#66BB6A',\n    width: 50,\n    borderWidth: 1.5,\n    borderLeftWidth: 0\n  }\n});","map":{"version":3,"sources":["/Users/aveeshagrawal/Desktop/wirelessLibrary/screens/BookTransactionScreen.js"],"names":["React","Permissions","BarCodeScanner","BookTransactionScreen","getCameraPermissions","id","askAsync","CAMERA","status","setState","hasCameraPermissions","buttonState","scanned","handleBarCodeScanned","type","data","state","scannedData","scannedBookId","scannedStudentId","undefined","StyleSheet","absoluteFillObject","styles","container","require","width","height","textAlign","fontSize","inputView","inputBox","scanButton","buttonText","Component","create","flex","justifyContent","alignItems","displayText","textDecorationLine","backgroundColor","padding","margin","marginTop","flexDirection","borderWidth","borderRightWidth","borderLeftWidth"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Text, View, TouchableOpacity, StyleSheet, TextInput } from 'react-native';\nimport * as Permissions from 'expo-permissions';\nimport { BarCodeScanner } from 'expo-barcode-scanner';\n\nexport default class BookTransactionScreen extends React.Component {\n    constructor(){\n      super();\n      this.state = {\n        hasCameraPermissions: null,\n        scanned: false,\n        scannedBookId:'',\n        scannedStudentId:'',\n        buttonState: 'normal'\n      }\n    }\n\n    getCameraPermissions = async (id) =>{\n      const {status} = await Permissions.askAsync(Permissions.CAMERA);\n      \n      this.setState({\n        /*status === \"granted\" is true when user has granted permission\n          status === \"granted\" is false when user has not granted the permission\n        */\n        hasCameraPermissions: status === \"granted\",\n        buttonState: id,\n        scanned: false\n      });\n    }\n\n    handleBarCodeScanned = async({type, data})=>{\n      const {buttonState} = this.state\n      if(buttonState === \"BookId\"){\n      this.setState({\n        scanned: true,\n        scannedData: data,\n        buttonState: 'normal'\n      });\n    }\n    else if(buttonState === \"StudentId\"){\n      this.setState({\n        scanned: true,\n        scannedData: data,\n        buttonState: 'normal'\n      });\n    }\n  }\n\n    render() {\n      const hasCameraPermissions = this.state.hasCameraPermissions;\n      const scanned = this.state.scanned;\n      const buttonState = this.state.buttonState;\n\n      if (buttonState !== \"normal\" && hasCameraPermissions){\n        return(\n          <BarCodeScanner\n            onBarCodeScanned={scanned ? undefined : this.handleBarCodeScanned}\n            style={StyleSheet.absoluteFillObject}\n          />\n        );\n      }\n\n      else if (buttonState === \"normal\"){\n        return(\n          <View style={styles.container}>\n            <View>\n              <Image source = {require(\"../assets/booklogo.jpg\")} style = {{width:200,height:200}}/>\n              <Text style = {{textAlign:'center',fontSize:30}}>Wily</Text>\n            </View>\n          <View style={styles.inputView}>\n            <TextInput style = {styles.inputBox} placeholder = \"Book Id\"\n            value = {this.state.scannedBookId}/>\n            <TouchableOpacity style = {styles.scanButton}\n              onPress = {() => {\n                this.getCameraPermissions(\"BookId\")\n              }}>\n              <Text style = {styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n          </View>\n          <View style={styles.inputView}>\n            <TextInput style = {styles.inputBox} placeholder = \"Student Id\"\n            value = {this.state.scannedStudentId}/>\n            <TouchableOpacity style = {styles.scanButton}\n            onPress = {() => {\n              this.getCameraPermissions(\"StudentId\")}}>\n              <Text style = {styles.buttonText}>Scan</Text>\n            </TouchableOpacity>\n          </View>\n        </View>\n        );\n      }\n    }\n  }\n\n  const styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    displayText:{\n      fontSize: 15,\n      textDecorationLine: 'underline'\n    },\n    scanButton:{\n      backgroundColor: '#2196F3',\n      padding: 10,\n      margin: 10\n    },\n    buttonText:{\n      fontSize: 20,\n      textAlign:'center',\n      marginTop:10\n    },\n    inputView:{\n      flexDirection:'row',\n      margin:20\n    },\n    inputBox:{\n      width:200,\n      height:40,\n      borderWidth:1.5,\n      borderRightWidth:0,\n      fontSize:20,\n    },\n    scanButton:{\n      backgroundColor:'#66BB6A',\n      width:50,\n      borderWidth:1.5,\n      borderLeftWidth:0\n    }\n  });"]},"metadata":{},"sourceType":"module"}